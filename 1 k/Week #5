#1
def addV(p,q):
    list = []
    if len(p) != len(q):
        return None
    for i in range(len(p)):
        list.append(p[i] + q[i])
    return list

print(addV([1,2,3],[1,2,3]))


#2
def dotProductV(p,q):
    sum = 0
    if len(p) != len(q):
        return None
    for i in range(len(p)):
        sum += p[i] * q[i]
    return sum

print(dotProductV([1,244,3],[1,2,300]))


#3
def addV(p,q):
    list = []
    if len(p) != len(q):
        return None
    for i in range(len(p)):
        list.append(p[i] + q[i])
    return list

def addM(A,B):
    matrix = []
    if len(A) != len(B):
        return None
    for i in range(len(A)):
        per = addV(A[i],B[i])
        if per != None:
            matrix.append(per)
        else:
            return None
    return matrix
    

print(addM([[1,2],[3,4]],[[1,2],[3,4]]))


#4
def addV(p,q):
    list = []
    if len(p) != len(q):
        return None
    for i in range(len(p)):
        list.append(p[i] + q[i])
    return list

def addM(A,B):
    matrix = []
    if len(A) != len(B):
        return None
    for i in range(len(A)):
        per = addV(A[i],B[i])
        if per != None:
            matrix.append(per)
        else:
            return None
    return matrix
    

print(addM([[1,2],[3,4]],[[1,2],[3,4]]))


#5 & 6
def getMinor(A,i,j):
    matrixB = []
    lst = []
    if len(A) != len(A[0]) or i >= len(A) or i < 0 or j < 0 or j >= len(A[0]):
        return None
    for k in range(len(A)):
        if k != i:
            for g in range(len(A[0])):
                if g != j:
                    lst.append(A[k][g])
            matrixB.append(lst)
            lst = []
    return matrixB

print(getMinor([[1,2,3],[4,5,6],[7,8,9]],1,2))


def det(A):
    determ = 0
    if len(A) == 1 and len(A[0]) == 1:
        return A[0][0]
    for i in range(1,len(A)+1):
        determ += (-1)**(i+1) * A[0][i-1] * det(getMinor(A,0,i-1))
    return determ


print(det([[0,1],[1,0]]))

